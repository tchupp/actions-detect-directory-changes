name: 'Detect Directory Changes'
description: 'GitHub Action for gathering directories with changed files'
branding:
  icon: 'package'
  color: 'blue'
inputs:
  included-paths:
    description: "Comma-separated paths to narrow down the search for changes. Defaults to all if not specified."
    required: false
    default: ""
  included-extensions:
    description: "Comma-separated paths to narrow down the search for changes. Defaults to all if not specified."
    required: false
    default: ""
  if-these-paths-change-return-all-included-paths:
    description: "If the any files on the following paths change, return all included files. (Comma-separated)"
    required: false
    default: ""
outputs:
  changed:
    description: "JSON encoded array that contains the changed files. 'Array<string>'"
    value: ${{ steps.filter.outputs.result }}
runs:
  using: "composite"
  steps:
    - name: Find changed files
      id: find-changed-files
      shell: bash --noprofile --norc {0}
      run: |
        if [[ "${DEBUG:-UNSET}" != "UNSET" ]]; then
          set -x
        fi
      
        case "${{ github.event_name }}" in

          "pull_request")
            base_ref="${GITHUB_BASE_REF}"

            git fetch origin "${base_ref}"
            mapfile -t changed_files < <(git --no-pager diff --name-only HEAD "origin/${base_ref}" | awk '{print "./"$1}')
            ;;

          "push")
            git fetch origin "${{ github.event.before }}"
            mapfile -t changed_files < <(git --no-pager diff-tree --name-only -r ${{ github.event.before }}..${{ github.event.after }} | awk '{print "./"$1}')
            ;;

          *)
            changed_files="$(git ls-files | sort -u)"
            mapfile -t changed_files < <(git ls-files | sort -u)
            ;;
        esac
        
        echo "changed_files: ${changed_files[@]}"

        all_files="$(git ls-files | sort -u)"
        echo "all_files: ${all_files[@]}"

        echo "changed_files=${changed_files[@]}" >> $GITHUB_OUTPUT
        echo "all_files=${all_files[@]}" >> $GITHUB_OUTPUT
    - name: Build
      id: build
      shell: bash
      run: |
        pushd $GITHUB_ACTION_PATH
        yarn install
        yarn run package
        popd
    - name: Filter and Encode Output
      id: filter
      uses: actions/github-script@v6
      env:
        INCLUDED_PATHS: ${{ inputs.included-paths }}
        INCLUDED_EXTENSIONS: ${{ inputs.included-extensions }}
        IF_THESE_PATHS_CHANGE_RETURN_ALL_INCLUDED_PATHS: ${{ inputs.if-these-paths-change-return-all-included-paths }}
        CHANGED_FILES: ${{ steps.find-changed-files.outputs.changed_files }}
        ALL_FILES: ${{ steps.find-changed-files.outputs.all_files }}
      with:
        script: |
          const script = require(`${process.env.GITHUB_ACTION_PATH}/dist/index.js`);

          const rawIncludedPaths = process.env.INCLUDED_PATHS;
          const rawIncludedExtensions = process.env.INCLUDED_EXTENSIONS;
          const rawIfThesePathsChangeReturnAllIncludedPaths = process.env.IF_THESE_PATHS_CHANGE_RETURN_ALL_INCLUDED_PATHS;
          const rawChangedFiles = process.env.CHANGED_FILES;
          const rawAllFiles = process.env.ALL_FILES;

          return script.default(
            rawIncludedPaths,
            rawIncludedExtensions,
            rawIfThesePathsChangeReturnAllIncludedPaths,
            rawChangedFiles,
            rawAllFiles,
          );
